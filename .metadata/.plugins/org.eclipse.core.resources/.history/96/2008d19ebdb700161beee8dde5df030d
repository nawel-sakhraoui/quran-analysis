#/usr/bin/env python
# -*- coding:utf-8 -*-

from flask import Flask, request
import json 
from flask.ext.cors import CORS

from datetime import datetime
from elasticsearch import Elasticsearch
import demjson

app = Flask(__name__)
CORS(app)
es = Elasticsearch() 

domains = [u"بحث عام" , u"2", u"4"]
index2 = "words-index"
index = "quran-index"
tachkil =   [u'ٍ'  ,u'ِ',  u'ْ', u'ٌ' , u'ُ' , u'ً' , u'َ', u'ّ']
huruf = [ u"ال", u"و", u"ف", u"ب" , u"ك", u"لل", u"ل", u"ا", u"اف", u""]

@app.route('/words', methods=['POST'])
def search_words():
    #print request.form
    
    post =  demjson.decode(list(request.form)[0])
    
    print  post  
    if  post[u"domain"] == domains[0] : 
        
        if post[u"query"][u"query"]  != u"":
            w_body = {u"query": {u"query_string" : post[u"query"]}}
           
            allwords =  es.search(index=index2, doc_type="words", 
                                  body = w_body)
            
            try : 
                #print allwords 
                id = allwords[u"hits"][u"hits"][0][u"_id"]
                #print id 
                allwords = allwords[u"hits"][u"hits"][0][u"_source"][id]
                allwords = list(set(allwords)) 
            except : 
                allwords = [post[u"query"][u"query"]]
                    
            new_words = list(set (search_word_with_val(allwords, es )+allwords))
                
            new_words = [ w for w in new_words if [t for t in tachkil if t in w  ] != [] ]
            
            #print allwords
            #print new_words 
             
            
            """body = {u"query":{ u"query_string" : post[u"query"]}}
            #body =  {"match_all": {} }
            output = es.search(index=index, doc_type='ayats',body=body  ) 
            print  len ( output[u"hits"][u"hits"] ) 
            output = output[u"hits"][u"hits"]"""
            print new_words 
            
        return json.dumps(new_words, ensure_ascii=False) ;
    
   
def search_word_with_val (words, es  ):
   
    
    new_words = []
    
    for word in words : 
            for  h in huruf :
                allwords = [] 
                word = h+word 
                w_body = {u"query": {u"query_string" : {u"query": word }}}
                w =  es.search(index=index2, doc_type="words", 
                                  body = w_body)
                
                if w[u"hits"][u"hits"] != []:  
                    
                    id = w[u"hits"][u"hits"][0][u"_id"]
                    allwords = w[u"hits"][u"hits"][0][u"_source"][id]
                   
                    new_words += allwords 
    
    #print new_words
        
    return new_words         
        
        
@app.route('/ayats', methods=['POST'])
def search_ayats():
    post =  demjson.decode(list(request.form)[0])
    ###################################################
    #  output data : 
    time_citation = 0 
    percent_appear = 0 
    surats = []
    allwords = []
    ##############
    if  post[u"domain"] == domains[0] : 
        
        
        for word in post[u"query"] : 
            w_body = {u"size" : 7000, u"query": {u"query_string" :{u"query" :word}}}
            #print w_body
            res =  es.search(index=index, doc_type="ayats", 
                                  body = w_body)
        
        
            time_citation += len( res[u"hits"][u"hits"])
        
            allwords += res[u"hits"][u"hits"]#[:][u"_source"]  
            
            
        for p in allwords :
            if p[u"_source"][u"السورة"] not in surats :  
                surats.append( p[u"_source"][u"السورة"]) 
            
    
    '''print surats 
    print time_citation  
    print allwords '''
    
    return  json.dumps( {"time_citation":time_citation  , "list_surats": surats, "data": allwords }, ensure_ascii=False);   #json.dumps(allwords, ensure_ascii=False) ;

       
if __name__ == '__main__':
    app.run()